# Generated by Django 3.2.16 on 2022-11-11 15:46

import api.models
from decimal import Decimal
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='MemberMaster',
            fields=[
                ('memberId', models.BigAutoField(primary_key=True, serialize=False)),
                ('group', models.CharField(default=0, max_length=10)),
                ('code', models.CharField(max_length=10)),
                ('name', models.CharField(max_length=30)),
                ('emailId', models.EmailField(max_length=30)),
                ('contactNo', models.CharField(blank=True, max_length=30, null=True)),
            ],
            options={
                'verbose_name': 'MemberMaster',
                'verbose_name_plural': 'MemberMaster',
            },
        ),
        migrations.CreateModel(
            name='MOS_Sales',
            fields=[
                ('trId', models.BigAutoField(primary_key=True, serialize=False)),
                ('group', models.CharField(max_length=10)),
                ('code', models.CharField(max_length=10)),
                ('ay', models.CharField(choices=[('2021-2022', '2021-2022'), ('2022-2023', '2022-2023'), ('2023-2024', '2023-2024'), ('2024-2025', '2024-2025'), ('2025-2026', '2025-2026'), ('2026-2027', '2026-2027'), ('2027-2028', '2027-2028'), ('2028-2029', '2028-2029')], max_length=9)),
                ('againstType', models.CharField(max_length=15)),
                ('scriptSno', models.IntegerField(blank=True, null=True)),
                ('purSno', models.IntegerField(blank=True, null=True)),
                ('sDate', models.DateField(blank=True, null=True)),
                ('srate', models.DecimalField(decimal_places=2, max_digits=65)),
                ('sqty', models.IntegerField()),
                ('sVal', models.DecimalField(decimal_places=2, max_digits=65)),
                ('stt_Paid', models.BooleanField(blank=True, null=True)),
                ('stt', models.DecimalField(blank=True, decimal_places=2, max_digits=65, null=True)),
                ('other', models.DecimalField(blank=True, decimal_places=2, max_digits=65, null=True)),
                ('speculation', models.DecimalField(blank=True, decimal_places=2, max_digits=65, null=True)),
                ('stgc', models.DecimalField(blank=True, decimal_places=2, max_digits=65, null=True)),
                ('ltgc', models.DecimalField(blank=True, decimal_places=2, max_digits=65, null=True)),
                ('fno', models.DecimalField(blank=True, decimal_places=2, max_digits=65, null=True)),
                ('empCode', models.CharField(max_length=10)),
            ],
            options={
                'verbose_name': 'MOS_Sales',
                'verbose_name_plural': 'MOS_Sales',
            },
        ),
        migrations.CreateModel(
            name='TranSum',
            fields=[
                ('trId', models.BigAutoField(primary_key=True, serialize=False)),
                ('group', models.CharField(max_length=10)),
                ('code', models.CharField(max_length=10)),
                ('fy', models.CharField(choices=[('2021-2022', '2021-2022'), ('2022-2023', '2022-2023'), ('2023-2024', '2023-2024'), ('2024-2025', '2024-2025'), ('2025-2026', '2025-2026'), ('2026-2027', '2026-2027'), ('2027-2028', '2027-2028'), ('2028-2029', '2028-2029')], max_length=9)),
                ('againstType', models.CharField(choices=[('Shares', 'Shares'), ('Mutual Funds', 'Mutual Funds'), ('Futures & Options', 'Futures & Options'), ('Day Trading', 'Day Trading'), ('Trading', 'Trading')], max_length=20)),
                ('sp', models.CharField(max_length=2)),
                ('part', models.CharField(max_length=30)),
                ('sno', models.IntegerField(blank=True, default=0, null=True)),
                ('fmr', models.FloatField(blank=True, null=True)),
                ('isinCode', models.CharField(blank=True, max_length=30, null=True)),
                ('trDate', models.DateField(blank=True, null=True)),
                ('qty', models.IntegerField(blank=True, null=True)),
                ('rate', models.DecimalField(decimal_places=2, max_digits=65)),
                ('sVal', models.DecimalField(blank=True, decimal_places=2, max_digits=65, null=True)),
                ('sttCharges', models.DecimalField(blank=True, decimal_places=2, max_digits=65, null=True)),
                ('otherCharges', models.DecimalField(blank=True, decimal_places=2, max_digits=65, null=True)),
                ('noteAdd', models.CharField(blank=True, max_length=200)),
                ('marketRate', models.DecimalField(blank=True, decimal_places=2, default=Decimal('0.00'), max_digits=65, null=True)),
                ('marketValue', models.FloatField(blank=True, null=True, validators=[api.models.TranSum.validate_decimals])),
                ('HoldingValue', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=65, null=True)),
                ('avgRate', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=65, null=True)),
                ('scriptSno', models.IntegerField(blank=True, default=0, null=True)),
                ('empCode', models.CharField(blank=True, max_length=10, null=True)),
                ('clDate', models.DateField(blank=True, null=True)),
                ('clRate', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=65, null=True)),
                ('clQTY', models.IntegerField(blank=True, default=0, null=True)),
                ('clValue', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=65, null=True)),
                ('clsttCharges', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=65, null=True)),
                ('clOtherCharges', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=65, null=True)),
                ('balQty', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=65, null=True)),
                ('dayTrade', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=65, null=True)),
                ('strategyDate', models.DateField(blank=True, null=True)),
                ('strategyTrigger', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=65, null=True)),
            ],
            options={
                'verbose_name': 'MOS_TransSum',
                'verbose_name_plural': 'MOS_TransSum',
            },
        ),
        migrations.CreateModel(
            name='CustomerMaster',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('userId', models.BigAutoField(primary_key=True, serialize=False)),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 30 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=30, unique=True, verbose_name='username')),
                ('group', models.CharField(blank=True, default=0, max_length=10)),
                ('firstName', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('lastName', models.CharField(blank=True, max_length=30, verbose_name='last name')),
                ('emailId', models.EmailField(blank=True, max_length=40, verbose_name='emailId')),
                ('contactNo', models.CharField(blank=True, max_length=30, null=True)),
                ('dob', models.DateField(blank=True, null=True)),
                ('photo', models.ImageField(blank=True, default='', null=True, upload_to='customer_photo')),
                ('address', models.TextField(blank=True, null=True)),
                ('active', models.BooleanField(default=False)),
                ('companyCode', models.CharField(blank=True, max_length=30, null=True)),
                ('sw_CustomerId', models.IntegerField(blank=True, null=True)),
                ('registration_Date', models.DateField(blank=True, null=True)),
                ('valid_Date', models.DateField(blank=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'CustomerMaster',
                'verbose_name_plural': 'CustomerMaster',
            },
        ),
    ]
